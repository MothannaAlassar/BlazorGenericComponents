#pragma checksum "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c48c3e117b56926bfa1b68faab2bd3f43766594c"
// <auto-generated/>
#pragma warning disable 1591
namespace SerialMakerBlazor.Pages.ClientMachines
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using SerialMakerBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using SerialMakerBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using SerialMakerBlazor.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using BlazorGenericComponents.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\SharedApps\GitHub\SerialMakerBlazor\_Imports.razor"
using BlazorGenericComponents.Helpers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/clientmachines")]
    public partial class Index : Components.BaseBasicCertComponent<Models.ClientMachine, Models.Views.VClientMachine>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Index</h3>\r\n");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "class", "row");
            __builder.OpenElement(3, "div");
            __builder.AddAttribute(4, "class", "mb-3");
            __builder.OpenElement(5, "div");
            __builder.AddAttribute(6, "class");
#nullable restore
#line 7 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
             if (!string.IsNullOrEmpty(validationMessage))
            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<BlazorGenericComponents.Components.MessagesComponent>(7);
            __builder.AddAttribute(8, "Message", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 9 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                             validationMessage

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(9, "MessageType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<BlazorGenericComponents.Helpers.MessageType>(
#nullable restore
#line 9 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                                                              base.MessageType

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
#nullable restore
#line 10 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 14 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
 if (IsLoading)
{

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<BlazorGenericComponents.Components.LoadingSpinner>(10);
            __builder.CloseComponent();
#nullable restore
#line 17 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
}
else
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(11, "button");
            __builder.AddAttribute(12, "class", "btn btn-primary");
            __builder.AddAttribute(13, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 20 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                                ()=> { NavigateToWithBaseUrl("addeditclientmachine/0"); }

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(14, 
#nullable restore
#line 20 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                                                                                             Tralnslate?.GetTranslation("Add New")

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(15, "\r\n    ");
            __Blazor.SerialMakerBlazor.Pages.ClientMachines.Index.TypeInference.CreateCascadingValue_0(__builder, 16, 17, 
#nullable restore
#line 21 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                           QueryBuilder

#line default
#line hidden
#nullable disable
            , 18, (__builder2) => {
                __builder2.OpenComponent<BlazorGenericComponents.Components.QueryHeaderCompo<Models.Views.VClientMachine>>(19);
                __builder2.AddComponentReferenceCapture(20, (__value) => {
#nullable restore
#line 23 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                                                    QueryBuilder = (BlazorGenericComponents.Components.QueryHeaderCompo<Models.Views.VClientMachine>)__value;

#line default
#line hidden
#nullable disable
                }
                );
                __builder2.CloseComponent();
            }
            );
            __builder.OpenElement(21, "div");
            __builder.AddAttribute(22, "class", "table-responsive-md");
            __builder.AddContent(23, 
#nullable restore
#line 28 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
         GetListContent()

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.OpenComponent<BlazorGenericComponents.Components.ConfirmationDialog>(24);
            __builder.AddAttribute(25, "IsVisible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 32 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                   showConfirmation

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(26, "OnClose", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Boolean>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Boolean>(this, 
#nullable restore
#line 32 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
                                                                async (confirmed) => { if (confirmed) await DeleteItem(); else CancelDelete(); }

#line default
#line hidden
#nullable disable
            )));
            __builder.CloseComponent();
#nullable restore
#line 33 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"

}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 36 "E:\SharedApps\GitHub\SerialMakerBlazor\Pages\ClientMachines\Index.razor"
       

    private async Task LoadingDataAsync()
    {
        Items = await CurrentShowService.GetAllAsync();

    }
    private void SetIntialData()
    {
        Columns = new List<GridColumn<Models.Views.VClientMachine>>();
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("ID"),
            Name = nameof(Models.Views.VClientMachine.ID),
            PropertySelector = p => p.ID,

        });
        Columns.Add(
        new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("ClientName"),
            Name = nameof(Models.Views.VClientMachine.ClientName),
            PropertySelector = p => p.ClientName,
        });

        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("MachineName"),
            Name = nameof(Models.Views.VClientMachine.MachineName),
            PropertySelector = p => p.MachineName,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("MachineUser"),
            Name = nameof(Models.Views.VClientMachine.MachineUser),
            PropertySelector = p => p.MachineUser,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("MachineCpu"),
            Name = nameof(Models.Views.VClientMachine.MachineCpu),
            PropertySelector = p => p.MachineCpu,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("MachineHard"),
            Name = nameof(Models.Views.VClientMachine.MachineHard),
            PropertySelector = p => p.MachineHard,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("MachineSerial"),
            Name = nameof(Models.Views.VClientMachine.MachineSerial),
            PropertySelector = p => p.MachineSerial,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("OthersData"),
            Name = nameof(Models.Views.VClientMachine.OthersData),
            PropertySelector = p => p.OthersData,
        });
        Columns.Add(new GridColumn<Models.Views.VClientMachine>
        {
            Title = Tralnslate?.GetTranslation("CreatedDate"),
            Name = nameof(Models.Views.VClientMachine.CreatedDate),
            PropertySelector = p => p.CreatedDate,
        });
        TableActions = new List<TableAction<Models.Views.VClientMachine>>
{

            new TableAction<Models.Views.VClientMachine>
            {
                Name = "Edit",
                Title = "Edit",
                Action = item => { NavigateToWithBaseUrl($"addeditclientmachine/{item.ID}"); /*ShowEditModal(item);*/ return Task.CompletedTask; }, // Call void function
                IsVisible = true // Set visibility based on your logic
            },
            new TableAction<Models.Views.VClientMachine>
            {
                Name = "Delete",
                Title = "Delete",
                Action = item =>{ShowConfirmation(item.ID); return Task.CompletedTask; },
                IsVisible = true // Change to false if you want to hide this action
            }

        };
    }
    protected async override Task OnInitializedAsync()
    {
        try
        {
            CurrentObject = new Models.ClientMachine();
            IsLoading = true;
            // await Task.Delay(5000);
            await LoadingDataAsync();
            SetIntialData();
            await ExecuteQuery();
        }
        catch (Exception ex)
        {

            AddErrorLog(ex);
        }
        IsLoading = false;
    }
    protected override void AddingNew()
    {
        CurrentObject = new Models.ClientMachine();
        modalTitle = Tralnslate?.GetTranslation("Add Machine");
        modalButtonText = Tralnslate?.GetTranslation("Add");
    }
    protected override void Editing(Models.Views.VClientMachine obj)
    {
        base.Editing(obj);
        var crnt = CurrentService.GetAll(a => a.ID == obj.ID)?.FirstOrDefault();
        CurrentObject = crnt;
        modalTitle = Tralnslate?.GetTranslation("Edit Machine");
        modalButtonText = Tralnslate?.GetTranslation("Update");
    }
    protected override async Task DeleteItemAsync(object id)
    {
        validationMessage = "";

        try
        {
            var ID = Convert.ToInt32(id);
            var rtv = await CurrentService.GetByIdAsync(ID);

            if (rtv != null)
            {
                await base.DeleteItemAsync(ID);
            }
            await LoadingDataAsync();
            await RefreshListAsync();
        }
        catch (Exception ex)
        {
            AddErrorLog(ex);
        }

        IsLoading = false;
    }
    private bool IsProcessing = false;
    private async Task SaveData()
    {
        try
        {

            //var prvname = CurrentService.GetAll()?.Where(a => a.Name.Trim() == CurrentObject.Name.Trim() && a.ID != CurrentObject.ID)?.FirstOrDefault();
            //if (prvname != null && prvname.ID > 0)
            //{
            //    validationMessage = Tralnslate?.GetTranslation("this name of this record is already exist try another name ");
            //    return;
            //}
            //else
            //{
            //    validationMessage = "";
            //}
            if (CurrentObject.ID == 0)
            {
                CurrentObject.CreatedDate = GetSystemDate();
                CurrentObject.CreatedUser = await GetUserIdAsync();
                await CurrentService.AddAsync(CurrentObject);
            }
            else
            {
                CurrentObject.UpdatedDate = GetSystemDate();
                CurrentObject.UpdatedUser = await GetUserIdAsync();
                await CurrentService.UpdateAsync(CurrentObject.ID, CurrentObject);
            }
            isModalVisible = false; // Hide the modal
            IsLoading = true;
            await LoadingDataAsync();
            await RefreshListAsync();
        }
        catch (Exception ex)
        {
            AddErrorLog(ex);
            validationMessage = ex?.Message;
        }
        IsProcessing = false;
        IsLoading = false;
    }

    private void HandleInvalidSubmit()
    {
        // This will trigger if the form validation fails.
        Console.WriteLine("Form submission is invalid.");
    }


#line default
#line hidden
#nullable disable
    }
}
namespace __Blazor.SerialMakerBlazor.Pages.ClientMachines.Index
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateCascadingValue_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.RenderFragment __arg1)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.CascadingValue<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ChildContent", __arg1);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
